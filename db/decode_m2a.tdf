--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_m2a
( 
	data[3..0]	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode809w[3..0]	: WIRE;
	w_anode826w[3..0]	: WIRE;
	w_anode836w[3..0]	: WIRE;
	w_anode846w[3..0]	: WIRE;
	w_anode856w[3..0]	: WIRE;
	w_anode866w[3..0]	: WIRE;
	w_anode876w[3..0]	: WIRE;
	w_anode886w[3..0]	: WIRE;
	w_anode896w[3..0]	: WIRE;
	w_anode907w[3..0]	: WIRE;
	w_anode917w[3..0]	: WIRE;
	w_anode927w[3..0]	: WIRE;
	w_anode937w[3..0]	: WIRE;
	w_anode947w[3..0]	: WIRE;
	w_anode957w[3..0]	: WIRE;
	w_anode967w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[7..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode886w[3..3], w_anode876w[3..3], w_anode866w[3..3], w_anode856w[3..3], w_anode846w[3..3], w_anode836w[3..3], w_anode826w[3..3], w_anode809w[3..3]);
	eq_wire2w[] = ( w_anode967w[3..3], w_anode957w[3..3], w_anode947w[3..3], w_anode937w[3..3], w_anode927w[3..3], w_anode917w[3..3], w_anode907w[3..3], w_anode896w[3..3]);
	w_anode809w[] = ( (w_anode809w[2..2] & (! data_wire[2..2])), (w_anode809w[1..1] & (! data_wire[1..1])), (w_anode809w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode826w[] = ( (w_anode826w[2..2] & (! data_wire[2..2])), (w_anode826w[1..1] & (! data_wire[1..1])), (w_anode826w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode836w[] = ( (w_anode836w[2..2] & (! data_wire[2..2])), (w_anode836w[1..1] & data_wire[1..1]), (w_anode836w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode846w[] = ( (w_anode846w[2..2] & (! data_wire[2..2])), (w_anode846w[1..1] & data_wire[1..1]), (w_anode846w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode856w[] = ( (w_anode856w[2..2] & data_wire[2..2]), (w_anode856w[1..1] & (! data_wire[1..1])), (w_anode856w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode866w[] = ( (w_anode866w[2..2] & data_wire[2..2]), (w_anode866w[1..1] & (! data_wire[1..1])), (w_anode866w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode876w[] = ( (w_anode876w[2..2] & data_wire[2..2]), (w_anode876w[1..1] & data_wire[1..1]), (w_anode876w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode886w[] = ( (w_anode886w[2..2] & data_wire[2..2]), (w_anode886w[1..1] & data_wire[1..1]), (w_anode886w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode896w[] = ( (w_anode896w[2..2] & (! data_wire[2..2])), (w_anode896w[1..1] & (! data_wire[1..1])), (w_anode896w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode907w[] = ( (w_anode907w[2..2] & (! data_wire[2..2])), (w_anode907w[1..1] & (! data_wire[1..1])), (w_anode907w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode917w[] = ( (w_anode917w[2..2] & (! data_wire[2..2])), (w_anode917w[1..1] & data_wire[1..1]), (w_anode917w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode927w[] = ( (w_anode927w[2..2] & (! data_wire[2..2])), (w_anode927w[1..1] & data_wire[1..1]), (w_anode927w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode937w[] = ( (w_anode937w[2..2] & data_wire[2..2]), (w_anode937w[1..1] & (! data_wire[1..1])), (w_anode937w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode947w[] = ( (w_anode947w[2..2] & data_wire[2..2]), (w_anode947w[1..1] & (! data_wire[1..1])), (w_anode947w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode957w[] = ( (w_anode957w[2..2] & data_wire[2..2]), (w_anode957w[1..1] & data_wire[1..1]), (w_anode957w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode967w[] = ( (w_anode967w[2..2] & data_wire[2..2]), (w_anode967w[1..1] & data_wire[1..1]), (w_anode967w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
